<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lawrence.demo.dao.mapper.UserMapper">
	
	<select id="findByID" parameterType="int" resultType="User">
		select * from `user` where id=#{id}
	</select>
	<insert id="add" parameterType="User" useGeneratedKeys="true"
		keyProperty="id">
		insert into `user`(name,mail,address)
		values(#{name},#{mail},#{address})
	</insert>
	<update id="merge" parameterType="User">
		update `user` set
			name = #{name},
			mail = #{mail},
			address = #{address}
		where id = #{id}
	</update>
	<delete id="deleteById" parameterType="Integer">
		delete from `user` where id=#{id}
	</delete>
	<select id="queryUser" parameterType="java.util.Map" resultType="User">
		select id,name,mail,address from `user`   
        <where>  
            <if test="name != null">  
                and name like CONCAT('%', CONCAT(#{name}, '%'))
            </if>  
			<if test="address != null">  
                and address like CONCAT('%', CONCAT(#{address}, '%'))
            </if>
        </where>
        <if test="orders!=null">
       		<foreach collection="orders" item="o"  open="order by " separator="," close=" ">
        		${o.sort} ${o.order}	        
        	</foreach>
        </if>
        <if test="orders==null">
        	order by id
        </if>
        limit #{start},#{limit} 
	</select>
	<select id="count" parameterType="java.util.Map" resultType="long">
		select count(id) from `user`   
        <where>  
            <if test="name != null">  
                and name like CONCAT('%', CONCAT(#{name}, '%'))
            </if>  
			<if test="address != null">  
                and address like CONCAT('%', CONCAT(#{address}, '%'))
            </if>
        </where>
	</select>
</mapper>